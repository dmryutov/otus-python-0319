# === Docker ===
# Install image
docker pull centos
# Run image
docker run -ti --rm -v /Users/dmryutov/Downloads/cpython:/tmp/bin centos /bin/bash
# Inside image
# Prints a trace of simple commands
set -x
# Exit immediately if a command exits with a non-zero status
set -e
# Delet all packages and metadata
yum clean all
# Install packages
yum install -y git make gcc-c++ vim ssh
# Download Python sources
cd /opt
git clone https://github.com/python/cpython.git
cd cpython
git checkout 2.7
# Prepare for build
./configure --with-pydebug --prefix=/tmp/python
# ... MODIFY FILES HERE ...
# Build Python
make -j2
# Install Python
make install


# === Opcode ===
# https://blog.quarkslab.com/building-an-obfuscated-python-interpreter-we-need-more-opcodes.html
# https://gist.github.com/serge-sans-paille/71a4b1e656d70ae94bb4
# 1) Modify Include/opcode.h
# 2) Modify Lib/opcode.py
# 3) make regen-opcode-targets
# 4) Modify Python/ceval.c
# 5) Modify Python/peephole.c


# === Until ===
# https://eli.thegreenplace.net/2010/06/30/python-internals-adding-a-new-statement-to-python/
# https://devguide.python.org/grammar/
# 1) Modify Grammar/Grammar
# 2) make regen-grammar
# 3) Modify Parser/Python.asdl
# 4) make regen-ast
# 5) Modify Python/ast.c
# 6) Modify Python/compile.c
# 7) Modify Python/symtable.c


# === Increment/Decrement ===
# https://hackernoon.com/modifying-the-python-language-in-7-minutes-b94b0a99ce14
# 1) Modify Grammar/Grammar
# 2) make regen-grammar
# 3) Modify Parser/tokenizer.c
# 4) Modify Include/token.h
# 5) Modify Python/ast.c


# === Create Git patch ===
git diff --binary > patch_name.patch